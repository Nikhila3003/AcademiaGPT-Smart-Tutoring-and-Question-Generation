1
00:00:00,000 --> 00:00:04,640
In this notebook, we're going to talk about plotting.

2
00:00:04,640 --> 00:00:10,960
We've seen lots of plots in the lectures so far, but we haven't formally discussed the

3
00:00:10,960 --> 00:00:12,320
package map plot lib.

4
00:00:12,320 --> 00:00:17,080
So we'd like to make sure that after this lecture, you understand some of the components of

5
00:00:17,080 --> 00:00:22,720
map plot lib that you're able to make basic plots, an in particular that you understand

6
00:00:22,720 --> 00:00:28,360
the difference between a figure and an axis.

7
00:00:28,360 --> 00:00:32,400
So why do we make plots?

8
00:00:32,400 --> 00:00:37,120
Most of the important outputs of your analysis will ultimately be the visualizations that

9
00:00:37,120 --> 00:00:40,360
you choose to communicate what you've discovered.

10
00:00:40,360 --> 00:00:47,600
So you'll spend months and months learning and analyzing and exploring, and you'll

11
00:00:47,600 --> 00:00:56,360
spend maybe a day or two making visualizations, but this day or two is critical to being

12
00:00:56,360 --> 00:01:01,760
able to communicate the things that you've learned over your months of hard work.

13
00:01:01,760 --> 00:01:09,640
So here are some quotes that we think are important by people we think have earned the

14
00:01:09,640 --> 00:01:12,880
right to give an opinion on this material.

15
00:01:12,880 --> 00:01:19,880
So the first is by Edward Tufft and he says above all else, show the data.

16
00:01:19,880 --> 00:01:24,880
David McChandless says by visualizing information, we turn it into a landscape that you can

17
00:01:24,880 --> 00:01:30,600
explore with your eyes, a sort of information map, and would you loss an information,

18
00:01:30,600 --> 00:01:33,680
an information map is kind of useful.

19
00:01:33,680 --> 00:01:39,680
The last is from a Goldman Sachs executive and he said, I spend hours thinking about how

20
00:01:39,680 --> 00:01:42,240
to get the story across my visualizations.

21
00:01:42,240 --> 00:01:46,280
I don't mind taking that long because it's that five minutes of presenting it, or some

22
00:01:46,280 --> 00:01:49,560
getting it that can make or break a deal.

23
00:01:49,560 --> 00:01:56,320
So we think this first point speaks to above everything else that you do make sure that your

24
00:01:56,320 --> 00:01:59,880
visualizations honestly represent the data.

25
00:01:59,880 --> 00:02:06,160
The second to are all about why are you representing data.

26
00:02:06,160 --> 00:02:15,760
You've spent months lost in information per se, but you only have a presentation, you have

27
00:02:15,760 --> 00:02:22,240
30 or 40 minutes to help someone else learn what you learned in months of analysis.

28
00:02:22,240 --> 00:02:27,400
So building a visualization is like giving this person a map.

29
00:02:27,400 --> 00:02:32,360
Then the last one is kind of in the same vein which is this person will spend hours thinking

30
00:02:32,360 --> 00:02:34,040
about their visualization.

31
00:02:34,040 --> 00:02:38,880
So you know you could create a draft of visualization in 30 seconds.

32
00:02:38,880 --> 00:02:44,400
But thinking carefully about what you're presenting is going to make or break a deal in

33
00:02:44,400 --> 00:02:48,080
this person's case or it's going to be the difference between someone understanding your

34
00:02:48,080 --> 00:02:51,520
research or not understanding your research.

35
00:02:51,520 --> 00:02:57,360
And if people understand your research it's more likely to be published.

36
00:02:57,360 --> 00:03:03,680
So this lecture is going to focus on the basics of creating visualizations of Python.

37
00:03:03,680 --> 00:03:07,920
So this will be a fast introduction, but this material is going to continually reappear

38
00:03:08,000 --> 00:03:16,920
and in particular today we're also going to talk about what makes a good plot.

39
00:03:16,920 --> 00:03:22,400
And in that lecture we'll have lots of examples of what charts we'll look like.

40
00:03:22,400 --> 00:03:28,320
So we have a couple of references that we think are useful.

41
00:03:28,320 --> 00:03:36,000
We're particularly keen on this Wall Street Journal Guide to Information Graphics is one of

42
00:03:36,080 --> 00:03:38,560
the ones that I've found most useful.

43
00:03:38,560 --> 00:03:43,920
These other two are longer and they're probably better used as a reference.

44
00:03:43,920 --> 00:03:49,120
But this book in particular was very readable.

45
00:03:49,120 --> 00:03:51,640
Okay, so let's get started.

46
00:03:51,640 --> 00:03:56,440
So the most widely plotting, most widely used plotting package in Python is one called

47
00:03:56,440 --> 00:03:58,320
map plot lib.

48
00:03:58,320 --> 00:04:00,720
And it's standard import aliases given here.

49
00:04:00,720 --> 00:04:04,760
So we import map plot lib.pyplot as PLT.

50
00:04:04,840 --> 00:04:13,000
So pipelot is a particular subpackage of the map plot lib package that exposes a lot of the basic plotting

51
00:04:14,840 --> 00:04:16,920
functionality.

52
00:04:16,920 --> 00:04:22,520
Additionally, when we're working in a notebook, we actually need to tell the notebook to display

53
00:04:22,520 --> 00:04:25,320
the images inside of the notebook itself.

54
00:04:25,320 --> 00:04:29,640
And so we have to use this percent map plot lib in line.

55
00:04:29,640 --> 00:04:33,240
And this is what's known as an ipython or a Jupiter magic.

56
00:04:33,240 --> 00:04:37,400
And you can read more about the Jupiter magic at this link.

57
00:04:39,800 --> 00:04:41,960
Okay, so let's create a plot.

58
00:04:43,000 --> 00:04:45,480
There's going to be three steps to creating our plot.

59
00:04:45,480 --> 00:04:49,080
The first is going to be creating a figure and access object.

60
00:04:49,800 --> 00:04:53,080
And these will allow us to store the information from our graphs somewhere.

61
00:04:54,120 --> 00:04:56,520
Step two is going to be let's generate some data.

62
00:04:56,520 --> 00:05:01,240
In this case, we're going to draw an evenly spaced numbers from 0 to 2 pi.

63
00:05:02,120 --> 00:05:06,280
And the data that we use, so that's the x, the y will be sine of x.

64
00:05:07,000 --> 00:05:13,480
And then in the last one, we'll use the plot method on the axis object to plot x and y.

65
00:05:15,320 --> 00:05:15,960
And here we go.

66
00:05:16,920 --> 00:05:21,240
So we've plotted sine of x from 0 to 2 pi.

67
00:05:24,200 --> 00:05:29,400
So we created these two objects, the figure and the axis.

68
00:05:30,360 --> 00:05:31,800
What is the difference between them?

69
00:05:33,160 --> 00:05:40,360
So the way that we found most useful to distinguish between the two is to think about a plot in terms of a

70
00:05:40,360 --> 00:05:41,320
framed painting.

71
00:05:42,040 --> 00:05:45,000
So the axis is the canvas.

72
00:05:45,560 --> 00:05:48,200
And that's where we are actually doing our drawing.

73
00:05:48,200 --> 00:05:49,560
That's where the art happens.

74
00:05:50,440 --> 00:05:52,440
The figure is going to be the axis.

75
00:05:53,400 --> 00:05:59,240
Plus the framing and the setting and everything else that goes into the framed pet

76
00:05:59,320 --> 00:06:05,320
painting. So we can see this by one of the elements in figure is face color.

77
00:06:06,200 --> 00:06:09,160
One of the properties and one of the properties in axis is also face color.

78
00:06:09,720 --> 00:06:16,040
So if we set the axis face color to blue, notice that only this part where the data is being displayed

79
00:06:17,080 --> 00:06:18,680
begins shows up as blue.

80
00:06:19,480 --> 00:06:23,880
And then the rest of the plot shows up with a red face color.

81
00:06:23,880 --> 00:06:27,880
And that's because this is all piece parts of the figure.

82
00:06:30,200 --> 00:06:36,600
So this difference also means that you can actually put more than one axis on a figure.

83
00:06:36,600 --> 00:06:43,960
So here we create a figure and multiple axes and these axes will be structured so that there are

84
00:06:43,960 --> 00:06:46,600
two rows and three columns.

85
00:06:47,160 --> 00:06:53,960
We'll set the figure face color to gray and we'll set the each of the axis face colors using the

86
00:06:53,960 --> 00:06:58,280
hex colors in this list and we'll go ahead and plot it.

87
00:06:58,280 --> 00:07:05,800
And so you can see that each axis has a unique color as given by the colors in this list.

88
00:07:06,360 --> 00:07:10,760
But the figure has a gray color throughout.

89
00:07:13,400 --> 00:07:18,920
So the matte plot lib library is going to be quite versatile and very flexible.

90
00:07:18,920 --> 00:07:21,000
You can do lots of incredible things.

91
00:07:21,880 --> 00:07:25,800
We recommend that you look through the matte plot lib example gallery.

92
00:07:25,800 --> 00:07:30,600
This is actually how Tom Spencer and I have all learned a lot about matte plot lib is

93
00:07:30,600 --> 00:07:37,320
if you when you look through this gallery, when you see examples of plots, you can actually click on the plot

94
00:07:37,320 --> 00:07:39,720
and they'll show you the code that generated the plot.

95
00:07:40,520 --> 00:07:45,640
So let's just work through some examples to introduce some of the possibilities that we have.

96
00:07:46,600 --> 00:07:51,960
So here we create a list of three countries, Canada, Mexico and the United States.

97
00:07:53,080 --> 00:08:04,760
We have their populations so 36.7 million, 129.2 million and 325.7 million and their land area in

98
00:08:04,760 --> 00:08:13,000
millions of miles squared. We're going to create a figure and axes. So this is going to have two rows

99
00:08:13,880 --> 00:08:19,400
and one column but we could also change it to have one row in two columns.

100
00:08:20,120 --> 00:08:22,440
Just depend on how we want to present the information.

101
00:08:23,400 --> 00:08:28,600
And then we're going to make a bar plot. Notice that we used dot bar instead of dot plot here.

102
00:08:28,600 --> 00:08:32,440
And we're going to put the countries along the x and the population on the y.

103
00:08:33,160 --> 00:08:36,360
And we're going to have the labels be center aligned.

104
00:08:37,320 --> 00:08:44,600
And then we're going to create a title for the axis. So notice this title comes as attached to the

105
00:08:44,600 --> 00:08:52,520
axis. We'll do the same thing with land area and we'll plot it. So we have populations in land area as two separate

106
00:08:53,320 --> 00:09:05,000
bar charts. We can do scatter plots. So we have kind of a lot here. So we created just random x and y points

107
00:09:05,080 --> 00:09:13,160
and we used a seed so that it would be reproducible. And then we also draw 50 other uniform random numbers

108
00:09:14,600 --> 00:09:22,040
and 50 more uniform random numbers between multiply by 15 and square. So these are going

109
00:09:22,040 --> 00:09:30,120
and then we multiply that by pi. Then we create a figure and axis. Again the default is to create

110
00:09:30,200 --> 00:09:36,840
one axis. And then we're going to make a scatter plot. So instead of plot we call to dot scatter

111
00:09:37,720 --> 00:09:44,040
where x and y get placed. And then what are these other two things that we created colors in

112
00:09:44,040 --> 00:09:51,400
area? Why did we create them? It turns out that area is going to be the size of these plots.

113
00:09:51,400 --> 00:09:58,280
So if we draw, if we drew a large random number and then we multiply it by 15 and square it

114
00:09:58,760 --> 00:10:05,960
then that would correspond to a really big dot. Whereas if we drew a small one like this we'd

115
00:10:05,960 --> 00:10:13,400
end up with a much smaller plot. So s controls the size of each dot and you can think about places where

116
00:10:13,400 --> 00:10:22,120
that might be useful. Population size by country land area. You can also change the color of each dot.

117
00:10:22,120 --> 00:10:28,760
So here we've drawn 50 random numbers and we've put them on the color scale.

118
00:10:29,880 --> 00:10:36,440
And then the last thing that we changed was this alpha which is kind of how transparent you

119
00:10:36,440 --> 00:10:41,800
like your colors to be. So if we go back the colors are not transparent at all when we set

120
00:10:41,800 --> 00:10:49,640
alpha equals one. But if we set alpha equal to 0.05 notice they've become much more transparent.

121
00:10:50,520 --> 00:11:00,120
So we liked how it looked with an alpha of 0.5 and then we've also done our first annotation of

122
00:11:00,120 --> 00:11:07,320
a graph. So the first argument to annotate is the text you would like to display followed by

123
00:11:08,120 --> 00:11:15,320
where that data that the data that's being annotated lives. So in this case the first point is x0y0

124
00:11:16,280 --> 00:11:21,400
and we've specified that these coordinates are data points in our data.

125
00:11:22,600 --> 00:11:30,360
And we've now said xy text and text cords is these two things specify where does the text

126
00:11:30,360 --> 00:11:37,400
that lines up with this annotation go. So we've moved it offset points. So 25 means it moves it to the

127
00:11:37,400 --> 00:11:46,920
right 25 points and down 25 points and we've specified what the arrow that connects the text to the

128
00:11:48,440 --> 00:11:57,000
data should look like. So we've chosen a particular arrow style and if we change between arc and arc

129
00:11:57,080 --> 00:12:10,360
3 we can see we change the curve of this arrow. So there's lots of other arguments that you can use

130
00:12:10,360 --> 00:12:16,040
on the annotations and we just encourage you to look at the map plot lib documentation.

131
00:12:16,280 --> 00:12:27,960
The last one that we're going to see is fill between and the default version of fill between

132
00:12:28,680 --> 00:12:38,360
just fills your line between 0 and the line value. So we've created x is from 0 to 1 and we're

133
00:12:38,360 --> 00:12:46,680
plotting sine of 4 pi x times e to the minus 5x. So these are oscillations that are going to dampen

134
00:12:48,840 --> 00:12:56,840
and so we just fill in the colors between 0 and that line. However we can also

135
00:12:58,120 --> 00:13:06,200
fill in between two lines and so now we're plotting 2 pi x times e to the minus 10x.

136
00:13:06,760 --> 00:13:14,520
Let's go ahead and make this 4 then we'll have the same. And what we see is we're now plotting

137
00:13:15,400 --> 00:13:22,040
the difference in these two lines. So this is most prominent here at the beginning where we're not

138
00:13:22,040 --> 00:13:26,280
plotting between 0 and there we're plotting from the lower value to the higher value.

139
00:13:28,200 --> 00:13:33,720
And so these are some of the plotting methods that we will use throughout this course.

140
00:13:36,200 --> 00:13:40,040
So this was your introduction to map plot lib.

