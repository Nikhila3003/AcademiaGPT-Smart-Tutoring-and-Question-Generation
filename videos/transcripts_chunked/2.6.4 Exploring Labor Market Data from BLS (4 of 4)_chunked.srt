1
00:00:00.000 --> 00:00:37.000
Okay, so great news now that we've talked about APIs and we've talked about earlier kind of some of the definitions of labor statistics, we're going to actually use the data that we've downloaded from the BLS API and explore what's been happening into the labor markets in the United States. So the first thing we're going to do is we're going to take the two data sets that we just downloaded from the BLS API and we're just going to read them in as raw data. The first thing we need to do is if we checked what data.detives told us, we would notice

2
00:00:32.000 --> 00:01:17.000
The first thing we need to do is if we checked what data.detives told us, we would notice that everything was of type object when clearly the values, if we did data.head, the value column should have a numeric type. So the first thing we're going to do is just convert that to a numeric type. Next, again, if we look at data.detives, we'll notice that we have a column a year and then this column a period name has the name of a month. So September August, which corresponds with period. So we have date information and the right thing to do is to put this date information

3
00:01:12.000 --> 00:02:01.000
So we have date information and the right thing to do is to put this date information into a date time object. So what we're going to use is our apply function and we're going to use it row by row. And once it's going to take a row and it's going to put a string, it's going to return a string that has one the month name and then the year name and then we're going to pass that to the date time. So in this first row, it would return one September 2020, then one August 2020, etc. etc. Once we've done that, we can drop any of the information related to the date other

4
00:01:56.000 --> 00:02:35.000
Once we've done that, we can drop any of the information related to the date other than the new column we've created. So we'll go ahead and drop year, period, period, name and latest. Then we're going to sort the values by their series ID and their date time. This is just going to reorder the columns. Voila. So now we have series ID, date time and value. And next, we're going to rename the CPS Labor Force status columns. So in particular, we're going to take employed and map it to the lower case word employed,

5
00:02:30.000 --> 00:03:13.000
So in particular, we're going to take employed and map it to the lower case word employed, unemployed to unemployed. Now we're going to take all of the labor force flows columns. So labor force flows, labor force flows, labor force flows. And these are the rates, transition rates that we talked about before. So we have the E to E rate, which is employed to employed, E to U, U to E and U to U. And in the replace column, so if you read the metadata.replace documentation, it actually tells us that if we pass a dictionary, we can do a couple of different things with it.

6
00:03:08.000 --> 00:03:52.000
tells us that if we pass a dictionary, we can do a couple of different things with it. But if we pass a dictionary that has column names and then passes in a new dictionary, so this would be a column name and this would be a current value and this would be the value you'd like to replace it with. We can replace just values in a particular column. So what we're doing here is we're saying, look at the metadata. Oh, let's only look at two. Look at the metadata frame. Take the CPS Labor Force status column and use this dictionary to replace the values here with

7
00:03:43.000 --> 00:04:32.000
Take the CPS Labor Force status column and use this dictionary to replace the values here with the values in the dictionary. So it's going to map this employed to the lower case employed, et cetera, et cetera. We can see that that worked. The next thing we're going to do is we're just going to dump all of the extra information. So in addition to the CPS Labor Force statuses, we have information on the demographics and the race, gender, marital statuses, et cetera. So all we're going to do is we're just going to keep the most basic information.

8
00:04:27.000 --> 00:05:05.000
So all we're going to do is we're just going to keep the most basic information. So we're only going to look at all industries, all occupations. We're going to look at them not seasonally adjusted data. We're going to look at all races, both sexes. So we're going to apply that in this query. And then we're only going to look at the values that are associated with a value from the CPS Labor Force status column is associated with a value from our dictionary from the previous slide. And so this will give us.

9
00:05:03.000 --> 00:05:44.000
And so this will give us. So you see it dumped a bunch of before they were employed, employed. The difference was this had min for employed. And so now we've dumped that because we only take both sexes and we ended up with an EE as our second element. Okay, so next we're going to merge our two data frames together. So we have the data frame, data frame. And then we have the metadata, LF data frame for Labor Force. And from this data frame, we only care about the series ID, which we need to do the

10
00:05:39.000 --> 00:06:18.000
And from this data frame, we only care about the series ID, which we need to do the merge. And these new variable names that we're going to use. Additionally, we're going to specify the how equals right because we only want to keep observations from data where the series ID corresponds to a value in our restricted metadata data frame. And we're merging on series ID. Additionally, we're going to rename the CPS Labor Force status column as variable. And then we're only going to keep variable, date time, and value.

11
00:06:12.000 --> 00:06:56.000
And then we're only going to keep variable, date time, and value. Perfect. Okay, great. So now what we're going to do is we're going to want to be able to generate kind of plots of the data that start at a particular date and allow us to compare two time periods to each other. So what this function is going to do is it's going to give us, oops. So it's going to take a data frame as an input, a start date, and a number of days. And it's going to give us out a data frame that's going to be a copy of this original

12
00:06:51.000 --> 00:07:29.000
And it's going to give us out a data frame that's going to be a copy of this original data frame. And it's only going to have values that start after start date. And it's only going to keep the dates that are within end days of that start date. So let's see how that works. So the first thing we do is compute days from. So say for example, this was January 1st, 2007. If start date was January 1st, 2007, then this would be equal to zero. So this is we're going to do this on a whole series, but we're going to talk about it as

13
00:07:25.000 --> 00:08:04.000
So this is we're going to do this on a whole series, but we're going to talk about it as a state where a state or example. But if the start date were still January 1st, 2007, and the date were February 1st, 2007, and this would give us 31. So then we're only going to keep days that come after a k-a are greater than or equal to zero. The start date. And we're not going to go so far in the future because we're going to limit it to being less than end days in the future. Then we're going to create a copy of our data frame.

14
00:08:01.000 --> 00:08:47.000
Then we're going to create a copy of our data frame. We're going to save this days from into our data frame. And then we're only going to keep the dates that we've specified below. Okay, so let's go ahead and see what this function does. So when we apply this, notice we now only have values, dates starting at 2012. And if we asked for the maximum, it shouldn't be more than five years in advance. So we have 2012, 2013, 2014, 2015, and all of 2016. So five years. So it does what we said. And I think it becomes even easier to see what this function does by looking at a pivot table.

15
00:08:42.000 --> 00:09:25.000
And I think it becomes even easier to see what this function does by looking at a pivot table. So what we're going to do is we're going to put the dates on the index. We're going to put our different variables. So these EE employed, unemployed, EU, etc. On the columns. And then we're going to fill it with the values. We'll create a new column called labor force. And then we're going to modify our EE, EU, EU rates to be percent of employed, unemployed. And then we'll look at this data frame. Okay, so again, if we look at PTNT.tale, we can see it ends in 2016.

16
00:09:15.000 --> 00:10:02.000
Okay, so again, if we look at PTNT.tale, we can see it ends in 2016. So our data starts in 2012 and goes to 2016. And we have EE is now the percent of employed individuals who continue to be employed. The EU is the percent of employed individuals who become unemployed. EU is the percent of unemployed individuals who become employed. And EU is the percent of unemployed individuals who become who continue unemployed. And the reason these don't quite add up to 100%. It's because we're ignoring the possibility of transitioning out of the labor force.

17
00:09:55.000 --> 00:10:45.000
It's because we're ignoring the possibility of transitioning out of the labor force. So any difference between EU and one is one that would be UN. So transitioning from unemployed to not in the labor force. Okay, so let's go ahead and make a plot. So what we're plotting here is kind of, so we view 2012 to 2016 as a relatively normal economic time. And so it's a very common time in which the United States is not experiencing any recession. Rather it had slow sustained growth. So you can see the unemployed to employed rate is roughly 20% of the unemployed.

18
00:10:37.000 --> 00:11:20.000
So you can see the unemployed to employed rate is roughly 20% of the unemployed. We're finding jobs in a given month. So that's relatively good. And the employment to unemployment transition rate was kind of in the one to two percent. And it moved around too much. So this gives us a benchmark of what kind of these rates should look like during a normal times. So what we're going to do now is let's go ahead and look at some turbulent times. So we're going to start our plots of turbulent times. One year prior to the trough of unemployment.

19
00:11:16.000 --> 00:11:56.000
One year prior to the trough of unemployment. So we did this approximately. But actually writing code to find the trough would be a great exercise if you're looking for some pandas practice. So we're going to start our plots in March 2019 and February 2007. And so we're going to only keep, and we're going to keep five years. So obviously for COVID, this won't, we only have a year and a half of data that we can plot. This assign is just equivalent to doing something like the F COVID EE is equal to the

20
00:11:50.000 --> 00:12:35.000
This assign is just equivalent to doing something like the F COVID EE is equal to the F COVID.Eval EE divided by employed. But it allows us just to kind of continue our chain approach. So that's why we did that. Great. So this is exactly what we did to our normal times data frame. So let's go ahead and look at just kind of the raw changes in employment and unemployment. So prior to this year, the great recession had been one of the most devastating economic events in kind of US history for a long time.

21
00:12:30.000 --> 00:13:25.000
events in kind of US history for a long time. And what you see is remember, so the event is going to start about 365 days after the plot starts. So what you see is kind of at its worst, the total number of unemployed was about 15 million during the great recession. And that kind of, it took us approximately. So one, so approximately two years after the recession started, we hit the peak number of unemployed people. And it's just so striking to see kind of, so we'll call this the start date. And if in a matter of two months, we saw a significantly larger increase in the unemployment.

22
00:13:18.000 --> 00:14:00.000
And if in a matter of two months, we saw a significantly larger increase in the unemployment. So reaching kind of about 20 million people unemployed. And what you're seeing is we're now seeing a relatively quick, I guess we'll call it a recovery and we're seeing lots of people returning to work. And that could be because they're being called back to work from a job they were temporarily laid off on, or maybe there's new jobs being created. But there's still kind of a long ways to go. So we're still a long ways away from our original level of unemployment.

23
00:13:51.000 --> 00:14:35.000
So we're still a long ways away from our original level of unemployment. And so this plot is going to be more comparable to what we just saw for the normal times a second ago. And we're going to plot the employment to unemployment transition rate and the unemployment to employment transition rate. So during normal times, again, roughly 2% of the unemployed find a job. So this is just the mean from that last plot that included the data from 2012 to 2016. And what you see was during the great recession, there was kind of a period of

24
00:14:29.000 --> 00:15:18.000
And what you see was during the great recession, there was kind of a period of prolonged decrease in job finding. So notice it's below the normal times level for kind of years afterwards. And what we're seeing here, so again, so this should be we're experiencing growth prior to both of these events. So we're seeing initially these rates this U to E rate was higher in both cases. And then what you see in the kind of COVID recession is you see a really large drop in finding jobs for just a couple of months.

25
00:15:15.000 --> 00:15:55.000
finding jobs for just a couple of months. And we've actually seen, so it jumped down. But now we've actually seen an increased rate of job finding, which I think is really interesting. And I think this is probably something that we've seen in many places all over the world. And then the other plot is kind of this employed to unemployed. So what percentage of the employed were losing their jobs? So again, during the great recession, this actually, so prior to this, this graph, prior to the COVID experience, this graph looked much more striking because what you saw was effectively

26
00:15:50.000 --> 00:16:31.000
to the COVID experience, this graph looked much more striking because what you saw was effectively the employment to unemployment transition rate increased by 150%. And what you see is kind of people were losing their jobs at a slightly higher rate for a very long time. But kind of a slightly higher rate does not look like basically a six, five or six times increase. So this is five or six hundred percent. People are losing their jobs at the peak of the COVID recession. And effectively a six hundred percent higher rate than they were during normal times.

27
00:16:24.000 --> 00:17:05.000
And effectively a six hundred percent higher rate than they were during normal times. But what you've seen is actually a lot of the firing has stopped. So as long as things continue to go well, we actually kind of should expect things to slowly return to normal because we're seeing higher than normal transitions from unemployment to employment and approximately normal transitions from employment to unemployment. So I would say kind of in the long term, these numbers are encouraging. And the thing that will be fun is next week will use a model that will allow us to talk

28
00:17:00.000 --> 00:17:14.000
And the thing that will be fun is next week will use a model that will allow us to talk about how fast you might expect things to return to normal or other things. But we hope you enjoyed this discussion of labor statistics and we'll see you soon.

